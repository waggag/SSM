<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.waggag.mapper.UserMapper">

    <!--配置查询结果的列名和属性名之间的对应关系-->
    <resultMap id="userMap" type="cn.waggag.domain.User">
        <!-- 配置 查询结果的列名和实体类的属性名的对应关系 -->
            <!-- 主键字段的对应 -->
            <id property="userId" column="id"></id>
            <!--非主键字段的对应-->
            <result property="userName" column="username"></result>
            <result property="userAddress" column="address"></result>
            <result property="userSex" column="sex"></result>
            <result property="userBirthday" column="birthday"></result>
    </resultMap>

    <!--查询找用户-->
    <select id="findAll" resultType="cn.waggag.domain.User">
        select * from user;
    </select>

    <!--添加用户-->
    <insert id="addUser" parameterType="cn.waggag.domain.User">
        <!--配置插入操作后，获取插入数据的Id-->
        <selectKey keyProperty="id" keyColumn="id" resultType="java.lang.Integer" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,birthday,sex,address) values(#{username},#{birthday},#{sex},#{address});
    </insert>
    <!--更新用户-->
    <update id="updateUser" parameterType="cn.waggag.domain.User">
        update user set username=#{username},birthday=#{birthday},sex=#{sex},address=#{address} where id = #{id}
    </update>
    <!--删除用户-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{id};
    </delete>

    <!--根据Id查询用户信息-->
    <select id="findUserById" parameterType="java.lang.Integer" resultType="cn.waggag.domain.User">
        select * from user where id = #{id};
    </select>

    <!--根据名称模糊查询用户-->
    <select id="findByName" parameterType="java.lang.String" resultType="cn.waggag.domain.User">
        select * from user where username like #{username};
    </select>

    <!--使用聚合函数，查询总的记录数-->
    <select id="findTotal" resultType="java.lang.Integer">
        select count(id) from user;
    </select>


    <!--根据QueryVo的查询条件查询用户-->
    <select id="findByVo" parameterType="cn.waggag.domain.QueryVo" resultType="cn.waggag.domain.User">
        select * from user where username like #{user.username};
    </select>

</mapper>